// add_light_layer_tool.gox - Tool for adding light layers to compositions
import (
    "github.com/sunqirui1987/ae-mcp/pkg/tools"
)

// Tool for adding light layers
tool "ae_add_light_layer", => {
    description "Add a light layer to a composition"
    string "composition_name", => {
        description "Name of the composition to add the layer to"
        required
    }
    string "layer_name", => {
        description "Name of the new light layer"
        required
    }
    string "light_type", => {
        description "Type of light (Parallel, Spot, Point, Ambient)"
    }
    array "color", => {
        description "RGB color array [R, G, B], with values ranging from 0-1"
        required
    }
}

// Convert parameters to appropriate Go types
compName := ${composition_name}.(string)
layerName := ${layer_name}.(string)

// Get light type with default
lightType := ""
if ${light_type} != nil {
    lightType = ${light_type}.(string)
}

// Convert color array to ColorRGB type
colorArray := ${color}.([]interface{})
var colorVal [3]float64

// Initialize with default white if needed
if len(colorArray) >= 3 {
    r, _ := colorArray[0].(float64)
    g, _ := colorArray[1].(float64)
    b, _ := colorArray[2].(float64)
    colorVal = [3]float64{r, g, b}
} else {
    colorVal = [3]float64{1.0, 1.0, 1.0} // Default white
}

// Call the implementation in golang
var result map[string]interface{}
var err error
result, err = tools.AddLightLayer(compName, layerName, lightType, colorVal)
if err != nil {
    return text({
        JSON: {"error": err.Error()},
    })
}
return text({
    JSON: result,
}) 